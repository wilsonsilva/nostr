module Nostr
  class Event
    attr_reader pubkey: String
    attr_reader created_at: Integer
    attr_reader kind: Integer
    attr_reader tags: Array[Array[String]]
    attr_reader content: String
    attr_accessor id: String?|nil
    attr_accessor sig: String?|nil

    def initialize: (
      pubkey: String,
      kind: Integer,
      content: String,
      ?created_at: Integer,
      ?tags: Array[Array[String]],
      ?id: String|nil,
      ?sig: String|nil
    ) -> void

    def serialize: -> [Integer, String, Integer, Integer, Array[Array[String]], String]

    def signed?: -> bool

    def to_h: -> {
      id: String?|nil,
      pubkey: String,
      created_at: Integer,
      kind: Integer,
      tags: Array[Array[String]],
      content: String,
      sig: String?|nil
    }
    def ==: (Event other) -> bool

    def sign:(String) -> Event

    def add_event_reference: (String) -> Array[Array[String]]
    def add_pubkey_reference: (String) -> Array[Array[String]]
  end
end
